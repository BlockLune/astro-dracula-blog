---
import { getCollection } from "astro:content";
import BaseLayout from "@/layouts/base-layout.astro";
import PostStack from "@/components/post-stack.tsx";
import LabelTag from "@/components/label-tag.tsx";
import {
  getUniqueLowerCaseTagMap,
  getSnapshots,
  makeUniqueByLang,
} from "@/utils/post";
import { ui, type Lang } from "@/utils/i18n";

export const getStaticPaths = async () => {
  const paths = await Promise.all(
    Object.keys(ui).map(async (lang) => {
      const posts = await getCollection("posts");
      const uniquePosts = makeUniqueByLang(posts, lang as Lang);
      const tags = getUniqueLowerCaseTagMap(
        uniquePosts.map((uniquePost) => uniquePost.data.tags).flat(),
      );
      return Array.from(tags.keys()).map((tag) => ({ params: { lang, tag } }));
    }),
  );
  return paths.flat();
};

const { lang, tag } = Astro.params;
const filteredPosts = await getCollection("posts", (post) =>
  getUniqueLowerCaseTagMap(post.data.tags).get(tag),
);
const filteredSnapshots = await getSnapshots(filteredPosts, lang as Lang);
---

<BaseLayout>
  <article>
    <h1 class="text-4xl font-black text-dracula-light mb-10 mx-auto">
      Posts with tag
      <LabelTag lang={lang as Lang} label={tag} size="large" />
    </h1>
    <PostStack lang={lang as Lang} snapshots={filteredSnapshots} client:load />
  </article>
</BaseLayout>
