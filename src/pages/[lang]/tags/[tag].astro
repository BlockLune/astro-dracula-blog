---
import { getCollection } from "astro:content";
import BaseLayout from "@/layouts/base-layout.astro";
import PostStack from "@/components/post-stack.tsx";
import LabelTag from "@/components/label-tag.tsx";
import { getUniqueLowerCaseTagMap, getSnapshots } from "@/utils/post";
import { ui, type Lang } from "@/utils/i18n";
import type { PostSnapshot } from "@/schemas/post";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  let paths: {
    params: { lang: Lang; tag: string };
    props: PostSnapshot[];
  }[] = [];

  Object.keys(ui).forEach(async (lang) => {
    const snapshots = await getSnapshots(posts, lang as Lang);
    const tags = getUniqueLowerCaseTagMap(
      snapshots.map((post) => post.tags).flat(),
    );
    Array.from(tags.keys()).forEach((tag) => {
      paths.push({
        params: { lang: lang as Lang, tag },
        props: snapshots,
      });
    });
  });

  return paths;
}

const { lang, tag } = Astro.params;
const snapshots = Astro.props;
---

<BaseLayout>
  <article>
    <h1 class="text-4xl font-black text-dracula-light mb-10 mx-auto">
      Posts with tag
      <LabelTag lang={lang} label={tag} size="large" />
    </h1>
    <PostStack lang={lang} snapshots={snapshots} client:load />
  </article>
</BaseLayout>
