---
import { getCollection, getEntry } from "astro:content";
import MarkdownPost from "@/components/markdown-post.astro";
import TocCard from "@/components/toc-card.tsx";
import BaseLayout from "@/layouts/base-layout.astro";
import { type Lang, ui } from "@/utils/i18n";
import { classifyByLangs } from "@/utils/post";
import { getDescFromMdString } from "@/utils/markdown";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  const classified = classifyByLangs(posts);

  const paths = [];
  for (const lang of Object.keys(ui)) {
    for (const pureSlug of classified.keys()) {
      const entry = await getEntry("posts", `${lang}/${pureSlug}`);
      const headings = (await entry?.render())?.headings || [];
      paths.push({
        params: { lang: lang as Lang, slug: pureSlug },
        props: { post: entry, headings },
      });
    }
  }
  return paths;
}

const { post, headings } = Astro.props;
const { lang, slug } = Astro.params;
const ogImageUrlToUse =
  post?.data.ogImageUrl || `/${lang}/og-images/${slug}.png`;

if (!post) {
  for (const possibleLang of Object.keys(ui)) {
    if (await getEntry("posts", `${possibleLang}/${slug}`)) {
      return Astro.rewrite(`/${possibleLang}/posts/${slug}`);
    }
  }
  return Astro.rewrite("/404");
}
---

<BaseLayout
  title={post!.data.title}
  description={getDescFromMdString(post!.body)}
  ogImageUrl={ogImageUrlToUse}
>
  <div class="relative">
    <div class="hidden 2xl:block fixed right-10 top-10 w-72">
      <TocCard headings={headings} lang={lang} client:load />
    </div>
    <MarkdownPost post={post} lang={lang} headings={headings} />
  </div>
</BaseLayout>
